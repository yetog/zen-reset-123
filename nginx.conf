
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Proxy audio requests to S3 bucket with proper encoding and MIME types
        location /zen-reset/audio/ {
            # Enable URL rewriting to handle spaces and special characters
            rewrite ^/zen-reset/audio/(.*)$ /$1 break;
            proxy_pass https://zaylegend.s3.ionos.com/zen-reset/audio/;
            proxy_set_header Host zaylegend.s3.ionos.com;
            proxy_set_header Range $http_range;
            proxy_cache_bypass $http_range;
            
            # Add proper MIME type handling
            location ~* \.(mp3|wav|ogg|m4a)$ {
                add_header Content-Type audio/mpeg;
            }
            
            # Headers for audio streaming
            add_header Accept-Ranges bytes;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            add_header Access-Control-Allow-Headers "Range, Content-Range, Content-Length";
            add_header Access-Control-Expose-Headers "Accept-Ranges, Content-Range, Content-Length";
            
            # Error and access logging for debugging
            error_log /var/log/nginx/audio_error.log debug;
            access_log /var/log/nginx/audio_access.log;
        }

        # Handle client routing (SPA)
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    }
}
